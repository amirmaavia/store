{"ast":null,"code":"var _jsxFileName = \"/home/amir/react-router/src/component/product.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport data from \"../data/data\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Columns from \"react-columns\";\nconst useStyles = makeStyles({\n  root: {\n    margin: \"10px\"\n  },\n  card: {\n    margin: \"5px\",\n    \"&:hover\": {\n      backgroundColor: \"none\"\n    }\n  },\n  CardMedia: {\n    height: \"100%\"\n  },\n  title: {\n    color: \"red\",\n    fontFamily: \"'Ubuntu', sans-serif\",\n    fontWeight: \"bold\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"none\"\n    }\n  },\n  price: {\n    fontFamily: \"'Ubuntu', sans-serif\",\n    color: \"red\",\n    fontWeight: \"bold\"\n  }\n});\n\nfunction Products() {\n  const classes = useStyles();\n  var queries = [{\n    columns: 2,\n    query: 'min-width: 500px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1000px'\n  }];\n  var dimensions = [{\n    width: 800,\n    height: 1200\n  }, {\n    width: 800,\n    height: 600\n  }, {\n    width: 800,\n    height: 800\n  }, {\n    width: 800,\n    height: 600\n  }, {\n    width: 800,\n    height: 1200\n  }, {\n    width: 800,\n    height: 600\n  }, {\n    width: 800,\n    height: 400\n  }, {\n    width: 800,\n    height: 400\n  }, {\n    width: 800,\n    height: 400\n  }, {\n    width: 800,\n    height: 800\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Columns, {\n    className: classes.root,\n    queries: queries,\n    dimensions: dimensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, Object.entries(data.shoes).map(([slug, {\n    name,\n    img,\n    price\n  }]) => /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.title,\n    to: `/products/${slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.CardMedia,\n    component: \"img\",\n    alt: name,\n    height: \"140\",\n    image: img,\n    title: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    variant: \"h6\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.price,\n    gutterBottom: true,\n    variant: \"p\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  }, price)))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/amir/react-router/src/component/product.js"],"names":["React","Link","data","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Typography","Columns","useStyles","root","margin","card","backgroundColor","height","title","color","fontFamily","fontWeight","textDecoration","price","Products","classes","queries","columns","query","dimensions","width","Object","entries","shoes","map","slug","name","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AACzBS,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE;AADN,GADmB;AAIzBC,EAAAA,IAAI,EAAE;AACFD,IAAAA,MAAM,EAAE,KADN;AAEF,eAAW;AACPE,MAAAA,eAAe,EAAE;AADV;AAFT,GAJmB;AAUzBP,EAAAA,SAAS,EAAC;AACNQ,IAAAA,MAAM,EAAE;AADF,GAVe;AAazBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,UAAU,EAAE,sBAFT;AAGHC,IAAAA,UAAU,EAAE,MAHT;AAIHC,IAAAA,cAAc,EAAE,MAJb;AAKH,eAAY;AACRA,MAAAA,cAAc,EAAE;AADR;AALT,GAbkB;AAsBzBC,EAAAA,KAAK,EAAE;AACHH,IAAAA,UAAU,EAAE,sBADT;AAEHD,IAAAA,KAAK,EAAE,KAFJ;AAGHE,IAAAA,UAAU,EAAE;AAHT;AAtBkB,CAAD,CAA5B;;AAgCA,SAASG,QAAT,GAAoB;AAChB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,MAAIc,OAAO,GAAG,CAAC;AACXC,IAAAA,OAAO,EAAE,CADE;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAAD,EAGT;AACDD,IAAAA,OAAO,EAAE,CADR;AAEDC,IAAAA,KAAK,EAAE;AAFN,GAHS,CAAd;AAQE,MAAIC,UAAU,GAAG,CACf;AAAEC,IAAAA,KAAK,EAAC,GAAR;AAAab,IAAAA,MAAM,EAAE;AAArB,GADe,EAEf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GAFe,EAGf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GAHe,EAIf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GAJe,EAKf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GALe,EAMf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GANe,EAOf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GAPe,EAQf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GARe,EASf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GATe,EAUf;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcb,IAAAA,MAAM,EAAE;AAAtB,GAVe,CAAjB;AAYF,sBACI,uDACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEQ,OAAO,CAACZ,IAA5B;AAAkC,IAAA,OAAO,EAAEa,OAA3C;AAAoD,IAAA,UAAU,EAAEG,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,MAAM,CAACC,OAAP,CAAe7B,IAAI,CAAC8B,KAApB,EAA2BC,GAA3B,CAA+B,CAAC,CAACC,IAAD,EAAO;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAad,IAAAA;AAAb,GAAP,CAAD,kBAChC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACV,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,OAAO,CAACP,KAAzB;AAAgC,IAAA,EAAE,EAAG,aAAYiB,IAAK,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEV,OAAO,CAAChB,SAA9B;AAAyC,IAAA,SAAS,EAAC,KAAnD;AAAyD,IAAA,GAAG,EAAE2B,IAA9D;AAAoE,IAAA,MAAM,EAAC,KAA3E;AAAiF,IAAA,KAAK,EAAEC,GAAxF;AAA6F,IAAA,KAAK,EAAED,IAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEX,OAAO,CAACP,KAA/B;AAAsC,IAAA,YAAY,MAAlD;AAAmD,IAAA,OAAO,EAAC,IAA3D;AAAgE,IAAA,SAAS,EAAC,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKkB,IADL,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEX,OAAO,CAACF,KAA/B;AAAsC,IAAA,YAAY,MAAlD;AAAmD,IAAA,OAAO,EAAC,GAA3D;AAA+D,IAAA,SAAS,EAAC,GAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,CAJJ,CAFJ,CADJ,CADR,eAcQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdR,CADC,CADL,CADJ,CADJ;AA4BH;;AAED,eAAeC,QAAf","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport data from \"../data/data\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Columns from \"react-columns\"\n\nconst useStyles = makeStyles({\n    root: {\n        margin: \"10px\",\n    },\n    card: {\n        margin: \"5px\",\n        \"&:hover\": {\n            backgroundColor: \"none\",\n        },\n    },\n    CardMedia:{\n        height: \"100%\"\n    },\n    title: {\n        color: \"red\",\n        fontFamily: \"'Ubuntu', sans-serif\",\n        fontWeight: \"bold\",\n        textDecoration: \"none\",\n        \"&:hover\" : {\n            textDecoration: \"none\",\n        }\n    },\n    price: {\n        fontFamily: \"'Ubuntu', sans-serif\",\n        color: \"red\",\n        fontWeight: \"bold\"\n    }\n});\n\n\n\n\nfunction Products() {\n    const classes = useStyles();\n    var queries = [{\n        columns: 2,\n        query: 'min-width: 500px'\n      }, {\n        columns: 3,\n        query: 'min-width: 1000px'\n      }];\n\n      var dimensions = [\n        { width:800, height: 1200 },\n        { width: 800, height: 600 },\n        { width: 800, height: 800 },\n        { width: 800, height: 600 },\n        { width: 800, height: 1200 },\n        { width: 800, height: 600 },\n        { width: 800, height: 400 },\n        { width: 800, height: 400 },\n        { width: 800, height: 400 },\n        { width: 800, height: 800 },\n      ];\n    return (\n        <>\n            <Columns className={classes.root} queries={queries} dimensions={dimensions}>\n                {Object.entries(data.shoes).map(([slug, { name, img, price }]) => (\n                <Card className={classes.card}>\n                        <CardActionArea>\n                            <Link className={classes.title} to={`/products/${slug}`}>\n                                <CardMedia className={classes.CardMedia} component=\"img\" alt={name} height=\"140\" image={img} title={name} />\n                                <CardContent>\n                                    <Typography className={classes.title} gutterBottom variant=\"h6\" component=\"h6\">\n                                        {name}\n                                    </Typography>\n                                    <Typography className={classes.price} gutterBottom variant=\"p\" component=\"p\">\n                                        {price}\n                                    </Typography>\n                                </CardContent>\n                            </Link>\n                        </CardActionArea>\n                        <CardActions>\n                        </CardActions>\n                </Card>\n                ))}\n                {/* <Grid item xs={12} sm={12}>\n\n                </Grid> */}\n            </Columns>\n        </>\n    )\n}\n\nexport default Products"]},"metadata":{},"sourceType":"module"}